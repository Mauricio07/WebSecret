
use inbloomOk
go

CREATE PROCEDURE ASP_LOGINUSERS @username varchar(50), @passuser varchar(50)
as
select u.name_users
from users u, user_passwords up
where u.id_users=up.id_users
and up.status_pass='enable';

go

CREATE PROCEDURE SP_LOGINUSER @name varchar(80), @address varchar(80), @phone varchar(10), @nick varchar(50), @email varchar(80), @pass varchar(20)
as
	declare @v_id int;

	insert into USERS(NAME_USERS, ADRESS_USERS, PHONE_USERS,NICK_USERS, EMAIL_USERS, DATECREATE_USERS)
	values (@name, @address, @phone, @nick, @email, getdate());

	set @v_id=(select MAX(id_users) from USERS);

	insert into USER_PASSWORDS(ID_USERS, PASS, DATECREATE_PASS, STATUS_PASS)
	values(@v_id, @pass, GETDATE(), 'Enable');
go

	exec Sp_loginUser 'HUERTAS MAURICIO','NINGUNA','0992696254','EMHT','emauricio@hotmail.com','123456';
	exec Sp_loginUser 'TORO ANDRES','NINGUNA','099999999','ANDRES','andres@hotmail.com','123456';
	exec Sp_loginUser 'BENAVIDES DAVID','NINGUNA','099999999','DAVID','david@hotmail.com','123456';
	exec Sp_loginUser 'JUAN CARLOS','NINGUNA','099999999','JUAN','jc@hotmail.com','123456';
go

CREATE PROCEDURE ASP_CONSULTASPECIE
AS
SELECT SP.ID_SPECIE, SP.NAME_SPECIE, SP.DATE_SPECIE,TA.ID_TAX, TA.COD_TAX, TA.NAME_TAX, VA.ID_VARIETY, VA.NAME_VARIETY
FROM SPECIES SP, TAXES TA, VARIETIES VA
WHERE SP.ID_TAX=TA.ID_TAX AND SP.ID_SPECIE=VA.ID_SPECIE
ORDER BY SP.NAME_SPECIE, SP.DATE_SPECIE
GO

CREATE PROCEDURE ASP_CONSULTA_ITEMS
AS
SELECT IT.ID_ITEM, SP.ID_SPECIE, SP.NAME_SPECIE, CO.ID_COLOR, CO.NAME_COLOR, ITY.ID_ITYPES, ITY.NAME_ITYPES, CU.ID_CUT, CU.NAME_CUT, GR.ID_GRADE, GR.NAME_GRADE, PR.ID_PROCESS, PR.TYPE_PROCESS
FROM ITEMS IT, SPECIES SP, COLORS CO, ITEMS_TYPES ITY, CUTS CU, GRADES GR, PROCESS PR
WHERE IT.ID_SPECIE=SP.ID_SPECIE
AND IT.ID_COLOR=CO.ID_COLOR
AND IT.ID_ITYPES=ITY.ID_ITYPES
AND IT.ID_CUT=CU.ID_CUT
AND IT.ID_GRADE=GR.ID_GRADE
AND IT.ID_PROCESS=PR.ID_PROCESS
ORDER BY SP.NAME_SPECIE, CO.NAME_COLOR,  ITY.NAME_ITYPES
GO

CREATE PROCEDURE SP_ADD_ITEM_RECIPE(@idRecip int, @quanRecip int ,@idCol int, @idCut int, @idGra int, @idType int, @idProcess int, @idSpec int, @idVariety int)
as
-- items receta
declare @idItem int
SET NOCOUNT ON
--comprueba que no exista creada la receta
set @idItem =(select count(*) from items where ID_COLOR=@idCol and ID_CUT=@idCut and ID_GRADE=@idGra and ID_ITYPES=@idType 
and ID_PROCESS=@idProcess and ID_SPECIE=@idSpec)

if (@idItem=0)
	--ADD ITEM SPECIE
	update VARIETIES set ID_SPECIE=@idSpec where ID_VARIETY=@idVariety;

	insert into items(ID_COLOR, ID_CUT, ID_GRADE, ID_ITYPES, ID_PROCESS,ID_SPECIE, DATE_ITEM, STATE_ITEM)
	values(@idCol, @idCut, @idGra, @idType, @idProcess, @idSpec, GETDATE(),1);
	
	set @idItem =(select count(*) from items where ID_COLOR=@idCol and ID_CUT=@idCut 
	and ID_GRADE=@idGra and ID_ITYPES=@idType and ID_PROCESS=@idProcess and ID_SPECIE=@idSpec)	
	
-- almacena la id en la receta
if (select count(*) from ITEMS_RECIPES where ID_RECIPE=@idRecip and ID_ITEM=@idItem)=0
	insert into ITEMS_RECIPES(ID_RECIPE, ID_ITEM, QUANTITY_RECIPEITEM)
	values(@idRecip, @idItem, @quanRecip);

select max(ID_ITEM) as 'INDEX' FROM ITEMS
go

CREATE PROCEDURE SP_ADD_RECIPE_HEADER @idPtype INT
AS
DECLARE @vNum INT

SET NOCOUNT ON

set @vNum=(SELECT ISNULL(MAX(ID_RECIPE),0) FROM RECIPES)+1;

INSERT INTO RECIPES(ID_PTYPE, DATECREATE_RECIPE, STATUS_RECIPE, NAME_RECIPE)
VALUES(@idPtype, GETDATE(),1, CONCAT('RECIPE_',@vNum));

SELECT MAX(ID_RECIPE)as'ID_RECIPE' FROM RECIPES
go

CREATE PROCEDURE SP_ADD_PRODUCTS @idRecipe int, @pack int, @idBox int, @codProd varchar(20),
	@nameProd varchar(100), @path varchar(200), @desc varchar(100), @codUpc varchar(20), @onlineName varchar(100), @iduser int
AS

declare @IdProd int
SET NOCOUNT ON
BEGIN TRANSACTION
	BEGIN TRY
		-- ADD PRODUCT
		INSERT INTO PRODUCTS(CODE_PRODUCT, NAME_PRODUCT, ID_BOX, IMAGE_PRODUCT, DESCRIPTION_PRODUCT, UPC_PRODUCT, ONLINENAME_PRODUCT, DATECREATE_PRODUCT, STATUS_PRODUCT,ID_USERPROD)
		VALUES(@codProd, @nameProd, @idBox, @path, @desc, @codUpc, @onlineName, GETDATE(),1,@iduser);
		
		set @IdProd=(SELECT MAX(ID_PRODUCT) FROM PRODUCTS); --Id product

		-- ADD PRODUCT RECIPES
		INSERT INTO PRODUCT_RECIPIES(ID_PRODUCT, ID_RECIPE, PACK)
		VALUES(@IdProd, @idRecipe, @pack);

		SELECT @IdProd AS'ID';

		COMMIT --add
	END TRY
	BEGIN CATCH
		ROLLBACK
		SELECT 0;
	END CATCH
go

CREATE PROCEDURE SP_ADD_MATERIALS_PRODUCT @idProd int, @idMat int, @quantity int
AS
SET NOCOUNT ON
	INSERT INTO MATERIALS_PRODUCTS(ID_PRODUCT, ID_MATERIAL,QUANTITY_PRODMAT)
	VALUES(@idProd,@idMat, @quantity);

	SELECT 'OK' AS 'OK'
go

CREATE PROCEDURE SP_ADD_MATERIAL_RECIPE_ITEMS @idRecipe int, @idItem int ,@idMaterial int, @quantity int
AS
SET NOCOUNT ON
if (select count(*) from RECIPE_ITEMS where ID_RECIPE=@idRecipe and ID_MATERIAL=@idMaterial and ID_ITEM=@idItem)=0
	INSERT INTO RECIPE_ITEMS (ID_RECIPE, ID_ITEM,ID_MATERIAL, QUANTITY_RECIPEMAT)
	VALUES(@idRecipe, @idItem,@idMaterial, @quantity);
SELECT 'OK'AS'OK';

go

CREATE PROCEDURE ASP_REP_PRODUCTS @state int
AS
SELECT P.ID_PRODUCT,CODE_PRODUCT, P.NAME_PRODUCT, P.ONLINENAME_PRODUCT, P.UPC_PRODUCT, P.IMAGE_PRODUCT, BT.TYPEBOXE_BTYPE
FROM PRODUCTS P, BOXES B, BOX_TYPES BT
WHERE B.ID_BOX=P.ID_BOX
AND B.ID_BTYPE=BT.ID_BTYPE
AND P.STATUS_PRODUCT=@state
ORDER BY P.DATECREATE_PRODUCT

GO


CREATE PROCEDURE SP_ADD_TYPEBOXES @type int, @length float, @width float, @height float, @weight float
AS
-- Insert Wight boxes
DECLARE @idWeight int;
set nocount on
INSERT INTO WEIGHTBOXES (LB_WEIGHT, KG_WEIGHT)
VALUES(@weight, (@weight/2.2))

set @idWeight=(SELECT MAX(ID_WEIGHT) FROM WEIGHTBOXES);

-- insrt Boxes
INSERT INTO BOXES(ID_BTYPE, ID_WEIGHT, HEIGHT_BOX, WIDTH_BOX, LENGTH_BOX, DATE_BOX)
VALUES(@type, @idWeight, @height, @width ,@length, GETDATE());

select @idWeight as'ok'

GO


CREATE VIEW VW_REP_BOXES 
AS
SELECT BT.TYPEBOXE_BTYPE, B.ID_BOX, B.LENGTH_BOX, B.WIDTH_BOX, B.HEIGHT_BOX, W.LB_WEIGHT, W.KG_WEIGHT
FROM BOXES B, WEIGHTBOXES W, BOX_TYPES BT
WHERE B.ID_BTYPE=BT.ID_BTYPE
AND B.ID_WEIGHT=W.ID_WEIGHT

GO

CREATE VIEW VW_BOXES
AS
SELECT B.ID_BOX, BT.TYPEBOXE_BTYPE, CONCAT(B.HEIGHT_BOX ,' X ', B.WIDTH_BOX, ' X ',B.LENGTH_BOX)AS 'DATA', WB.KG_WEIGHT
FROM BOXES B, BOX_TYPES BT, WEIGHTBOXES WB
WHERE B.ID_BTYPE=BT.ID_BTYPE
and b.ID_WEIGHT=wb.ID_WEIGHT

go


CREATE PROCEDURE ASP_ITEMS_RECIPE @idSpecie int, @idColor int, @idProcess int, @type int, 
@idCuts int, @idGrade int, @idVariety int,@quantity int,  @indexItemRecipe int, @indexRecipe int
AS
SELECT (SELECT NAME_SPECIE FROM SPECIES WHERE ID_SPECIE=@idSpecie)AS'SPECIE',
	   (SELECT NAME_COLOR FROM COLORS WHERE ID_COLOR=@idColor)AS'COLOR',
	   (SELECT TYPE_PROCESS FROM PROCESS WHERE ID_PROCESS=@idProcess)AS'PROCESS',
	   (SELECT NAME_ITYPES FROM ITEMS_TYPES WHERE ID_ITYPES=@type)AS'TYPE',
	   (SELECT NAME_CUT FROM CUTS WHERE ID_CUT=@idCuts)AS'CUTS',
	   (SELECT NAME_VARIETY FROM VARIETIES WHERE ID_VARIETY=@idVariety)AS'VARIETY',
	   (SELECT NAME_GRADE FROM GRADES WHERE ID_GRADE=@idGrade)AS'GRADE',
	   @quantity AS 'QUANTITY', @indexItemRecipe as 'INDEXITEMRECIPE', @indexRecipe as 'INDEXRECIPE'


go

CREATE PROCEDURE ASP_HEADER_PRODUCTS @idProd int
AS
select ID_PRODUCT,CODE_PRODUCT, NAME_PRODUCT, ONLINENAME_PRODUCT,IMAGE_PRODUCT, DESCRIPTION_PRODUCT, UPC_PRODUCT 
from PRODUCTS 
where ID_PRODUCT=@idProd
go

go
CREATE PROCEDURE ASP_MATERIALS_PRODUCTS @idProduct int
AS
select MAPR.ID_INDEXMP, P.ID_PRODUCT, MI.ID_MATERIAL, MI.NAME_MATERIALS, MAPR.QUANTITY_PRODMAT 
from MATERIALS_ITEMS MI, PRODUCTS P, MATERIALS_PRODUCTS MAPR
WHERE MAPR.ID_PRODUCT=P.ID_PRODUCT
AND MAPR.ID_MATERIAL=MI.ID_MATERIAL
AND P.ID_PRODUCT=@idProduct

go

CREATE PROCEDURE ASP_RECIPE_PRODUCTS @idProduct int
AS
SELECT PRODUCT_RECIPIES.ID_PRODUCT, RECIPES.ID_RECIPE, RECIPES.ID_PTYPE, PRESENTATIONES.NAME_PTYPE, ITEMS_RECIPES.QUANTITY_RECIPEITEM 
FROM PRODUCT_RECIPIES, RECIPES, PRESENTATIONES, ITEMS_RECIPES
WHERE PRODUCT_RECIPIES.ID_RECIPE=RECIPES.ID_RECIPE
AND RECIPES.ID_PTYPE =PRESENTATIONES.ID_PTYPE
AND RECIPES.ID_RECIPE=ITEMS_RECIPES.ID_RECIPE
AND PRODUCT_RECIPIES.ID_PRODUCT=@idProduct
AND RECIPES.STATUS_RECIPE=1


GO
CREATE PROCEDURE ASP_RECIPES_ITEMS @idProduct int, @idRecipe int
AS
SELECT RECIPES.ID_RECIPE, ITEMS.ID_ITEM, ITEMS_RECIPES.QUANTITY_RECIPEITEM, 
ITEMS.ID_SPECIE, SPECIES.NAME_SPECIE, 
VARIETIES.ID_VARIETY, VARIETIES.NAME_VARIETY,
ITEMS.ID_PROCESS, PROCESS.TYPE_PROCESS, 
ITEMS.ID_ITYPES, ITEMS_TYPES.NAME_ITYPES,
ITEMS.ID_COLOR, COLORS.NAME_COLOR, 
ITEMS.ID_GRADE, GRADES.NAME_GRADE,
ITEMS.ID_CUT, CUTS.NAME_CUT
FROM PRODUCT_RECIPIES, RECIPES, ITEMS, ITEMS_RECIPES, COLORS,PROCESS, SPECIES, GRADES, CUTS, VARIETIES, ITEMS_TYPES
WHERE PRODUCT_RECIPIES.ID_RECIPE=RECIPES.ID_RECIPE
AND RECIPES.ID_RECIPE=ITEMS_RECIPES.ID_RECIPE
AND ITEMS_RECIPES.ID_ITEM=ITEMS.ID_ITEM
AND ITEMS.ID_COLOR=COLORS.ID_COLOR
AND ITEMS.ID_PROCESS=PROCESS.ID_PROCESS
AND ITEMS.ID_SPECIE=SPECIES.ID_SPECIE
AND ITEMS.ID_GRADE=GRADES.ID_GRADE
AND ITEMS.ID_CUT=CUTS.ID_CUT
AND ITEMS.ID_ITYPES=ITEMS_TYPES.ID_ITYPES
AND SPECIES.ID_SPECIE=VARIETIES.ID_SPECIE
AND PRODUCT_RECIPIES.ID_PRODUCT=@idProduct
AND RECIPES.ID_RECIPE=@idRecipe

GO
CREATE PROCEDURE ASP_ITEMS_MATERIALS @idRecipe int, @idItem int
AS
SELECT RECIPE_ITEMS.ID_INDEXRI, ITEMS.ID_ITEM, RECIPE_ITEMS.ID_RECIPE, MATERIALS_ITEMS.NAME_MATERIALS, RECIPE_ITEMS.QUANTITY_RECIPEMAT
FROM ITEMS, RECIPE_ITEMS, MATERIALS_ITEMS
WHERE ITEMS.ID_ITEM=RECIPE_ITEMS.ID_ITEM
AND RECIPE_ITEMS.ID_MATERIAL=MATERIALS_ITEMS.ID_MATERIAL
AND ITEMS.ID_ITEM=@idItem
AND RECIPE_ITEMS.ID_RECIPE=@idRecipe
GO